AWSTemplateFormatVersion: 2010-09-09
Description: Create a custom VPC

Parameters:
   # PeerRequesterAccountId:
      # Type: String
    LatestAmiId:
        Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
        Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-minimal-kernel-default-x86_64'
        
    InstanceTypeParameter:
        Type: String
        Default: t2.micro
        AllowedValues:
          - t2.micro
          - t2.small
          - t3.micro
          - t3.small
        Description: Enter t2.micro, t2.small, t3.micro or t3.small. Default is t2.micro.
        
    # PublicKeyName: 
        # Type: AWS::EC2::KeyPair::KeyName
        # Description: The name of the public key file to use for SSH/RDP access to the instances.
        
    # PrivateKeyName: 
        # Type: AWS::EC2::KeyPair::KeyName
        # Description: The name of the private key file to use for SSH/RDP access to the instances.
        
#Mappings:

    #RegionMap:
        #us-east-1:
            #keypair: PubKP
            #keypair2: PrivKP
    
Resources:
    VPC01:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            Tags:
                - Key: Name
                  Value: VPC01
    Priv1SubVPC01:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: 10.0.0.0/20
            MapPublicIpOnLaunch: false
            AvailabilityZone:
                Fn::Select:
                    - 0
                    - Fn::GetAZs: ""
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: Priv1SubVPC01
    Priv2SubVPC01:
        Type: AWS::EC2::Subnet
        Properties:
            CidrBlock: 10.0.16.0/20
            MapPublicIpOnLaunch: false
            AvailabilityZone:
                Fn::Select:
                    - 1
                    - Fn::GetAZs: ""
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: Priv2SubVPC01
#######Creating Custom InternetGateway#######
    CustomIGW:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: Custom IGW
    AttachIGWtoVPC01:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref CustomIGW
            VpcId: !Ref VPC01
#######Creating route table#######
    # PubRT:
        # Type: AWS::EC2::RouteTable
        # Properties:
            # VpcId: !Ref VPC01
            # Tags:
                # - Key: Name
                  # Value: PubRT
    Priv1RT:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: Priv1RT
                  
                  
    Priv2RT:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: Priv2RT
    
    # PubSubInternetRule:
        # Type: AWS::EC2::Route
        # Properties:
            # RouteTableId: !Ref PubRT
            # DestinationCidrBlock: 0.0.0.0/0
            # GatewayId: !Ref CustomIGW
    # AssociatePubRTtoPubSubVPC01:
        # Type: AWS::EC2::SubnetRouteTableAssociation
        # Properties:
            # RouteTableId: !Ref PubRT
            # SubnetId: !Ref PubSubVPC01
    AssociatePrivRTtoPriv1SubVPC01:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref Priv1RT
            SubnetId: !Ref Priv1SubVPC01
            
    AssociatePrivRTtoPriv2SubVPC01:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref Priv2RT
            SubnetId: !Ref Priv2SubVPC01
            
            
#######Create Network ACL#######
        
    # PubNACL:
        # Type: AWS::EC2::NetworkAcl
        # Properties:
            # VpcId: !Ref VPC01
            # Tags:
                # - Key: Name
                  # Value: PubNACL
                  
    # InboundPubRuleSSHNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 100
            # Protocol: 6
            # RuleAction: allow
            # Egress: false
            # CidrBlock: 0.0.0.0/0
            # PortRange: 
                # From: 22 
                # To: 22


    # InboundPubRuleHTTPNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 200
            # Protocol: 6
            # RuleAction: allow
            # Egress: false
            # CidrBlock: 0.0.0.0/0
            # PortRange:
                # From: 80
                # To: 80

    # InboundPubRuleHTTPSNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 300
            # Protocol: 6
            # RuleAction: allow
            # Egress: false
            # CidrBlock: 0.0.0.0/0
            # PortRange:
                # From: 443
                # To: 443
                             
    # InboundEmphemeralPubNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 400
            # Protocol: 6
            # RuleAction: allow
            # Egress: false
            # CidrBlock: 0.0.0.0/0
            # PortRange: 
                # From: 1024
                # To: 65535
                
    # InboundPubRuleICMPNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 500
            # Protocol: 1
            # RuleAction: allow
            # Egress: false
            # CidrBlock: 0.0.0.0/0
            # Icmp: 
                # Code: -1
                # Type: -1
                
    # OutboundPubNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 100
            # Protocol: 6
            # RuleAction: allow
            # Egress: true
            # CidrBlock: 0.0.0.0/0
            # PortRange: 
                # From: 0
                # To: 65535

    # OutboundPubRuleHTTPNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 200
            # Protocol: 6
            # RuleAction: allow
            # Egress: true
            # CidrBlock: 0.0.0.0/0
            # PortRange:
                # From: 80
                # To: 80

    # OutboundPubRuleHTTPSNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 300
            # Protocol: 6
            # RuleAction: allow
            # Egress: true
            # CidrBlock: 0.0.0.0/0
            # PortRange:
                # From: 443
                # To: 443
                
    # OutboundICMPPubNACL:
        # Type: AWS::EC2::NetworkAclEntry
        # Properties:
            # NetworkAclId: !Ref PubNACL
            # RuleNumber: 400
            # Protocol: 1
            # RuleAction: allow
            # Egress: true
            # CidrBlock: 0.0.0.0/0
            # Icmp: 
                # Code: -1
                # Type: -1           
            
    # PubNACLAssociation:
        # Type: AWS::EC2::SubnetNetworkAclAssociation
        # Properties:
            # SubnetId: !Ref PubSubVPC01
            # NetworkAclId: !Ref PubNACL
            

######Private1NACL######

            
    Priv1NACL:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: Priv1NACL
                  
                  
    InboundPriv1RuleSSHNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange: 
                From: 22 
                To: 22
                            
    InboundEmphemeralPriv1NACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 200
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange: 
                From: 1024
                To: 65535
               
    InboundPriv1RuleICMPNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 300
            Protocol: 1
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            Icmp: 
                Code: -1
                Type: -1

    InboundPriv1RuleHTTPNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 400
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 80
                To: 80

    InboundPriv1RuleHTTPSNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 500
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 443
                To: 443
               
    OutboundPriv1NACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange: 
                From: 0
                To: 65535
               
    OutboundICMPPriv1NACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 200
            Protocol: 1
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            Icmp: 
                Code: -1
                Type: -1      

    OutboundPriv1RuleHTTPNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 300
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 80
                To: 80

    OutboundPriv1RuleHTTPSNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv1NACL
            RuleNumber: 400
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 443
                To: 443                
            
    Priv1NACLAssociation:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            SubnetId: !Ref Priv1SubVPC01
            NetworkAclId: !Ref Priv1NACL
            
            
########Private2NACL########

    Priv2NACL:
        Type: AWS::EC2::NetworkAcl
        Properties:
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: Priv2NACL
                  
    InboundPriv2RuleSSHNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange: 
                From: 22 
                To: 22
                            
    InboundEmphemeralPriv2NACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 200
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange: 
                From: 1024
                To: 65535
               
    InboundPriv2RuleICMPNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 300
            Protocol: 1
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            Icmp: 
                Code: -1
                Type: -1

    InboundPriv2RuleHTTPNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 400
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 80
                To: 80

    InboundPriv2RuleHTTPSNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 500
            Protocol: 6
            RuleAction: allow
            Egress: false
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 443
                To: 443
               
    OutboundPriv2NACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 100
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange: 
                From: 0
                To: 65535
               
    OutboundICMPPriv2NACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 200
            Protocol: 1
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            Icmp: 
                Code: -1
                Type: -1      

    OutboundPriv2RuleHTTPNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 300
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 80
                To: 80

    OutboundPriv2RuleHTTPSNACL:
        Type: AWS::EC2::NetworkAclEntry
        Properties:
            NetworkAclId: !Ref Priv2NACL
            RuleNumber: 400
            Protocol: 6
            RuleAction: allow
            Egress: true
            CidrBlock: 0.0.0.0/0
            PortRange:
                From: 443
                To: 443                
            
    Priv2NACLAssociation:
        Type: AWS::EC2::SubnetNetworkAclAssociation
        Properties:
            SubnetId: !Ref Priv2SubVPC01
            NetworkAclId: !Ref Priv2NACL







            
########Create EC2 instance#######

    # PublicInstance:
        # Type: AWS::EC2::Instance
        # Properties:
            # AvailabilityZone: us-east-1a
            # ImageId: !Ref LatestAmiId
            # InstanceType: !Ref InstanceTypeParameter
            # NetworkInterfaces:
                # - DeviceIndex: '0'
                  # AssociatePublicIpAddress: 'true'
                  # SubnetId: !Ref PubSubVPC01
                  # GroupSet:
                    # - !Ref PubSG
                    
            # KeyName:
               # !FindInMap [RegionMap, !Ref "AWS::Region", keypair]
                # !Ref PublicKeyName
            # Tags:
                # - Key: Name
                  # Value: Bastion Host
            # UserData:
                # Fn::Base64:
                    # !Sub |
                        # !/bin/bash
                        # Use this for your user data (script from top to bottom)
                        # install httpd (Linux 2 version)
                        # yum update -y
                        # yum install -y httpd
                        # systemctl start httpd
                        # systemctl enable httpd
                        # echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html
                        
                        
    # PrivateInstance:
        # Type: AWS::EC2::Instance
        # Properties:
            # AvailabilityZone: us-east-1b
            # ImageId: !Ref LatestAmiId
            # InstanceType: !Ref InstanceTypeParameter
            # NetworkInterfaces:
                # - DeviceIndex: 0
                  # AssociatePublicIpAddress: false
                  # SubnetId: !Ref PrivSubVPC01
                  # GroupSet:
                    # - !Ref PrivSG
                    
            # KeyName:
                # !FindInMap [RegionMap, !Ref "AWS::Region", keypair2]
                # !Ref PrivateKeyName
            # Tags:
                # - Key: Name
                  # Value: Private Host
                        
    # PubSG:
        # Type: AWS::EC2::SecurityGroup
        # Properties:
            # GroupDescription: Enable SSH, HTTP access
            # VpcId: !Ref VPC01
            # Tags:
                # - Key: Name
                  # Value: PubSG
            # SecurityGroupIngress:
              # - IpProtocol: tcp
                # FromPort: 80
                # ToPort: 80
                # CidrIp: 0.0.0.0/0
              # - IpProtocol: tcp
                # FromPort: 22
                # ToPort: 22
                # CidrIp: 0.0.0.0/0
              # - IpProtocol: icmp
                # FromPort: -1
                # ToPort: -1
                # CidrIp: 0.0.0.0/0
    
    PrivSGForEC2InstanceConnectEndpoint:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable SSH, HTTP access
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: PrivSGForEC2InstanceConnectEndpoint
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 10.0.0.0/16
              - IpProtocol: icmp
                FromPort: -1
                ToPort: -1
                CidrIp: 0.0.0.0/0    
    
    PrivSGForInstance1:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable SSH, HTTP access
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: PrivSGForInstance1
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 136.158.59.196/32
              - IpProtocol: icmp
                FromPort: -1
                ToPort: -1
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                SourceSecurityGroupId:
                    Fn::GetAtt:
                      - PrivSGForEC2InstanceConnectEndpoint
                      - GroupId
                
    PrivSGForInstance2:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Enable SSH, HTTP access
            VpcId: !Ref VPC01
            Tags:
                - Key: Name
                  Value: PrivSGForInstance2
            SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 80
                ToPort: 80
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 136.158.59.196/32
              - IpProtocol: icmp
                FromPort: -1
                ToPort: -1
                CidrIp: 0.0.0.0/0
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                SourceSecurityGroupId:
                    Fn::GetAtt:
                      - PrivSGForInstance1
                      - GroupId
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 10.0.0.0/16 
                
                
